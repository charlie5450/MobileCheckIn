@page
@model SeatsModel
@{
    ViewData["Title"] = "좌석 선택";

    var expireTime = ViewData["ExpireTime"] as DateTime?;
    var expireTimeJs = expireTime.HasValue ? expireTime.Value.ToString("o") : "";
}

<div class="status-banner">
    <div>
        선택된 좌석: <strong id="selected-seat-text">@Model.SelectedSeat</strong>
    </div>
    <div>
        남은 시간: <strong id="time-text">--:--</strong>
    </div>
</div>

<form method="post" class="seat-form">
    <input type="hidden" name="SelectedSeat" id="SelectedSeat" value="@Model.SelectedSeat" />

    @functions {
        bool IsReserved(string seat) => Model.ReservedSeats.Contains(seat);
    }

    <div class="seat-map">
        @for (int row = 1; row <= 32; row++)
        {
            // 13열 위에 비상구 문구
            if (row == 13)
            {
                <div class="seat-row">
                    <span class="text-danger">비상구 좌석</span>
                </div>
            }

            // 14, 15열은 스킵 (비상구 좌석 없음)
            if (row == 14 || row == 15) continue;

            // 실제 좌석 출력
            <div class="seat-row">
                <div class="seat-group">
                    @foreach (var seatLetter in new[] { "A", "B", "C" })
                    {
                        var seat = $"{row}{seatLetter}";
                        bool isReserved = IsReserved(seat);
                        string btnClass = isReserved
                        ? "btn-secondary"
                        : (row == 13 || row == 16 ? "btn-warning" : "btn-outline-primary");
                        string disabled = isReserved ? "disabled" : "";

                        <button type="button" class="btn @btnClass seat-btn"
                                data-seat="@seat" data-row="@row" @disabled>
                            @(isReserved ? "❌" : seat)
                        </button>
                    }
                </div>
                <div class="aisle-space"></div>
                <div class="seat-group">
                    @foreach (var seatLetter in new[] { "D", "E", "F" })
                    {
                        var seat = $"{row}{seatLetter}";
                        bool isReserved = IsReserved(seat);
                        string btnClass = isReserved
                        ? "btn-secondary"
                        : (row == 13 || row == 16 ? "btn-warning" : "btn-outline-primary");
                        string disabled = isReserved ? "disabled" : "";

                        <button type="button" class="btn @btnClass seat-btn"
                                data-seat="@seat" data-row="@row" @disabled>
                            @(isReserved ? "❌" : seat)
                        </button>
                    }
                </div>
            </div>

            // 16열 바로 아래에 비상구 문구 출력
            if (row == 16)
            {
                <div class="seat-row">
                    <span class="text-danger">비상구 좌석</span>
                </div>
            }
        }

        <div class="toilet-block">🚻 화장실</div>
    </div>

    <div class="footer-button">
        <button type="submit" class="btn btn-success btn-block">선택 완료</button>
    </div>
</form>

@section Scripts {
<script>
    window.scrollTo({ top: 0, behavior: 'smooth' });

    document.addEventListener("DOMContentLoaded", function () {
        const seatButtons = document.querySelectorAll("button[data-seat]");
        const selectedSeatInput = document.getElementById("SelectedSeat");
        const seatText = document.getElementById("selected-seat-text");

        let selectedSeat = selectedSeatInput.value; // 선택된 좌석 기억

        function updateSeatStyles() {
            seatButtons.forEach(b => {
                if (!b.disabled) {
                    if (b.dataset.seat === selectedSeat) {
                        b.classList.remove("btn-outline-primary", "btn-warning");
                        b.classList.add("btn-primary");
                    } else {
                        b.classList.remove("btn-primary");
                        if (b.dataset.row === "13" || b.dataset.row === "16") {
                            b.classList.add("btn-warning");
                        } else {
                            b.classList.add("btn-outline-primary");
                        }
                    }
                }
            });
        }

        seatButtons.forEach(btn => {
            btn.addEventListener("click", () => {
                const seat = btn.dataset.seat;
                const row = btn.dataset.row;

                selectedSeat = seat;
                selectedSeatInput.value = seat;
                seatText.textContent = seat;

                updateSeatStyles(); // 모든 버튼 스타일 새로 적용

                // ⭐ 강제 리렌더
                btn.offsetHeight;

                if (row === "13" || row === "16") {
                    alert("비상구 좌석은 비상시 승무원 지시에 따라 도와야 하며, 15세 이상이고 신체 건강한 승객만 선택 가능합니다.");

                    // 다시 한 번 강조 (alert 이후 스타일이 풀릴 경우 대비)
                    updateSeatStyles();
                }
            });
        });

        // 페이지 로드시 기본 스타일 적용
        updateSeatStyles();

        // 타이머 처리
        const expireTimeRaw = "@expireTimeJs";

        if (expireTimeRaw) {
            const expireTime = new Date(expireTimeRaw);

            function updateRemainingTime() {
                const now = new Date();
                const diff = expireTime - now;

                if (diff <= 0) {
                    document.getElementById("time-text").innerText = "만료되었습니다";
                    window.location.href = "/"; // 메인으로 이동
                    return;
                }

                const minutes = Math.floor(diff / 60000);
                const seconds = Math.floor((diff % 60000) / 1000);
                document.getElementById("time-text").innerText = `${minutes}:${seconds.toString().padStart(2, '0')}`;
            }

            updateRemainingTime();
            setInterval(updateRemainingTime, 1000);
        } else {
            document.getElementById("time-text").innerText = "시간 정보 없음";
        }
    });
</script>
}


}

<style>
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    #selected-seat-text {
        background-color: #d1ecf1;
        color: #0c5460;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-weight: bold;
        font-size: 1.2rem; /* 기존보다 살짝 키움 */
    }

    #time-text {
        background-color: #fff3cd;
        color: #856404;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-weight: bold;
        font-size: 1.2rem; /* 기존보다 살짝 키움 */
    }

    .status-banner {
        position: sticky;
        top: 0;
        z-index: 999;
        background-color: #f1f1f1;
        border-bottom: 1px solid #ccc;
        padding: 0.5rem 1rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 0.9rem;
    }

    .seat-map {
        max-height: calc(100vh - 180px);
        overflow-y: auto;
        padding: 1rem;
        background-color: #f8f9fa;
    }

    .seat-row {
        display: flex;
        justify-content: center;
        margin-bottom: 8px;
    }

    .seat-group {
        display: flex;
        gap: 8px;
    }

    .aisle-space {
        width: 40px;
    }

    .toilet-block {
        width: 100%;
        text-align: center;
        font-size: 0.9rem;
        padding: 6px;
        background-color: #dee2e6;
        border-radius: 6px;
        margin-top: 1rem;
    }

    .seat-btn {
        width: 48px;
        height: 48px;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        font-weight: bold;
    }


    .footer-button {
        padding: 1rem;
        text-align: center;
        border-top: 1px solid #ddd;
        background-color: #fff;
        position: sticky;
        bottom: 0;
        z-index: 998;
    }

    .btn-block {
        width: 100%;
        max-width: 300px;
    }
</style>
